import numpy as np
import matplotlib.pyplot as plt

x=np.linspace(-1,1,40) # gives 40 equally spaced divisions between -1 and 1
N=len(x)  
u=np.zeros(40);
g=np.zeros(40);

# exact solution
for i in range(0, len(x)): 
	u[i] = -np.sin(x[i]*np.pi) # gives u(x,0)
plt.plot(x, u)

# initial conditions
dt = 0.04;
t = 0.00;

# to find u(x,30)
while t < 30:  
	for i in range(0, N):
		if i == 0:
			a = N-1
			b = 1
		elif i == N-1: 
			a = N-2
			b = 0
		else: 
			a = i - 1
			b = i + 1

		g[i] = 0.5*(u[b]+u[a])-0.4*(u[b]-u[a]) # Lax Friedrichs solution
	
	for i in range(0, len(x)):
		u[i] = g[i]
	t = t + dt

plt.plot(x,g, 'or', alpha = 0.7)
plt.show()
